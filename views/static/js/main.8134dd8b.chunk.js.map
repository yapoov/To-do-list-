{"version":3,"sources":["services/auth.service.js","components/login.component.js","components/register.component.js","services/auth-header.js","services/user.service.js","components/home.component.js","components/profile.component.js","components/board-user.component.js","components/board-admin.component.js","App.js","reportWebVitals.js","index.js"],"names":["API_URL","username","password","axios","post","then","response","data","access_token","localStorage","setItem","JSON","stringify","removeItem","email","parse","getItem","required","value","className","roler","Login","props","handleLogin","bind","onChangeUsername","onChangePassword","state","usename","loading","message","e","this","setState","target","preventDefault","form","validateAll","checkBtn","context","_errors","length","AuthService","login","history","push","window","location","reload","error","resMessage","toString","src","alt","onSubmit","ref","c","htmlFor","type","name","onChange","validations","disabled","role","style","display","Component","isEmail","vusername","vpassword","Register","handleRegister","onChangeEmail","successful","register","authHeader","user","accessToken","get","headers","Home","content","UserService","getPublicContent","Profile","redirect","userReady","currentUser","getCurrentUser","to","substring","substr","id","roles","map","index","BoardUser","getUserBoard","BoardAdmin","getAdminBoard","App","logOut","showAdminBoard","undefined","includes","logout","href","onClick","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8134dd8b.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = \"http://localhost:8080/api/auth/\";\r\n\r\nclass AuthService{\r\n    login(username , password){\r\n        return axios\r\n        .post(API_URL + \"login\",{\r\n            username,\r\n            password\r\n        })\r\n        .then(response =>{\r\n            if(response.data.access_token){\r\n                localStorage.setItem(\"user\", JSON.stringify(response.data))\r\n            }\r\n            return response.data\r\n        });\r\n\r\n\r\n    }\r\n\r\n    logout(){\r\n        localStorage.removeItem();\r\n    }\r\n\r\n    register(username,email, password){\r\n        return axios.post(API_URL + 'register',{\r\n            username,\r\n            email,\r\n            password\r\n        });\r\n    }\r\n    getCurrentUser(){\r\n        return JSON.parse(localStorage.getItem('user'));;\r\n    }\r\n}\r\n\r\nexport default new AuthService();","import React,{Component} from 'react';\r\nimport Form from 'react-validation/build/form';\r\nimport Input from 'react-validation/build/input';\r\nimport CheckButton from 'react-validation/build/button';\r\nimport AuthService from \"../services/auth.service\";\r\n\r\nconst required = value =>{\r\n    if(!value){\r\n        return(\r\n            <div className =\"alert alert-danger\" roler=\"alert\">\r\n                This field is required!\r\n            </div>)\r\n    };\r\n}\r\n\r\nexport default class Login extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.handleLogin = this.handleLogin.bind(this);\r\n        this.onChangeUsername = this.onChangeUsername.bind(this);\r\n        this.onChangePassword = this.onChangePassword.bind(this);\r\n\r\n        this.state ={\r\n            usename: \"\",\r\n            password: \"\",\r\n            loading: false,\r\n            message: \"\"\r\n        };\r\n    }\r\n\r\n    onChangeUsername(e){\r\n        this.setState({\r\n            username: e.target.value\r\n        });\r\n    }\r\n\r\n    onChangePassword(e) {\r\n        this.setState({\r\n          password: e.target.value\r\n        });\r\n    }\r\n\r\n    handleLogin(e){\r\n        e.preventDefault();\r\n        this.setState({\r\n            message:\"\",\r\n            loading: true\r\n        });\r\n\r\n        this.form.validateAll();\r\n\r\n        if(this.checkBtn.context._errors.length === 0){\r\n            AuthService.login(this.state.username, this.state.password).then(\r\n                ()=>{\r\n                    this.props.history.push('/profile');\r\n                    window.location.reload();\r\n                },\r\n                error => {\r\n                    const resMessage = \r\n                    (error.response &&\r\n                        error.response.data &&\r\n                        error.response.data.message) ||\r\n                    error.message ||\r\n                    error.toString();\r\n\r\n                    this.setState({\r\n                        loading: false,\r\n                        message: resMessage\r\n                    });\r\n                }\r\n            )\r\n        } else{\r\n            this.setState({\r\n                loading: false\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n          <div className=\"col-md-12\">\r\n            <div className=\"card card-container\">\r\n              <img\r\n                src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\r\n                alt=\"profile-img\"\r\n                className=\"profile-img-card\"\r\n              />\r\n    \r\n              <Form\r\n                onSubmit={this.handleLogin}\r\n                ref={c => {\r\n                  this.form = c;\r\n                }}\r\n              >\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"username\">Username</label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"username\"\r\n                    value={this.state.username}\r\n                    onChange={this.onChangeUsername}\r\n                    validations={[required]}\r\n                  />\r\n                </div>\r\n    \r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"password\">Password</label>\r\n                  <Input\r\n                    type=\"password\"\r\n                    className=\"form-control\"\r\n                    name=\"password\"\r\n                    value={this.state.password}\r\n                    onChange={this.onChangePassword}\r\n                    validations={[required]}\r\n                  />\r\n                </div>\r\n    \r\n                <div className=\"form-group\">\r\n                  <button\r\n                    className=\"btn btn-primary btn-block\"\r\n                    disabled={this.state.loading}\r\n                  >\r\n                    {this.state.loading && (\r\n                      <span className=\"spinner-border spinner-border-sm\"></span>\r\n                    )}\r\n                    <span>Login</span>\r\n                  </button>\r\n                </div>\r\n    \r\n                {this.state.message && (\r\n                  <div className=\"form-group\">\r\n                    <div className=\"alert alert-danger\" role=\"alert\">\r\n                      {this.state.message}\r\n                    </div>\r\n                  </div>\r\n                )}\r\n                <CheckButton\r\n                  style={{ display: \"none\" }}\r\n                  ref={c => {\r\n                    this.checkBtn = c;\r\n                  }}\r\n                />\r\n              </Form>\r\n            </div>\r\n          </div>\r\n        );\r\n      }\r\n}","import React,{Component } from 'react';\r\nimport Form from 'react-validation/build/form';\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\nimport { isEmail } from \"validator\";\r\n\r\nimport AuthService from '../services/auth.service';\r\n\r\nconst required = value =>{\r\n    if(!value){\r\n        return (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n            This field is required!\r\n          </div>);\r\n    }\r\n};\r\n\r\nconst email = value => {\r\n    if (!isEmail(value)){\r\n        return(\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n                This is not a valid email.\r\n            </div>\r\n            );\r\n    }\r\n};\r\n\r\nconst vusername = value => {\r\n  if (value.length < 3 || value.length > 20) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        The username must be between 3 and 20 characters.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst vpassword = value => {\r\n  if (value.length < 6 || value.length > 40) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        The password must be between 6 and 40 characters.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default class Register extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleRegister = this.handleRegister.bind(this);\r\n    this.onChangeUsername = this.onChangeUsername.bind(this);\r\n    this.onChangeEmail = this.onChangeEmail.bind(this);\r\n    this.onChangePassword = this.onChangePassword.bind(this);\r\n\r\n    this.state = {\r\n      username: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      successful: false,\r\n      message: \"\"\r\n    };\r\n  }\r\n\r\n  onChangeUsername(e) {\r\n    this.setState({\r\n      username: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeEmail(e) {\r\n    this.setState({\r\n      email: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangePassword(e) {\r\n    this.setState({\r\n      password: e.target.value\r\n    });\r\n  }\r\n\r\n  handleRegister(e) {\r\n    e.preventDefault();\r\n\r\n    this.setState({\r\n      message: \"\",\r\n      successful: false\r\n    });\r\n\r\n    this.form.validateAll();\r\n\r\n    if (this.checkBtn.context._errors.length === 0) {\r\n      AuthService.register(\r\n        this.state.username,\r\n        this.state.email,\r\n        this.state.password\r\n      ).then(\r\n        response => {\r\n          this.setState({\r\n            message: response.data.message,\r\n            successful: true\r\n          });\r\n        },\r\n        error => {\r\n          const resMessage =\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString();\r\n\r\n          this.setState({\r\n            successful: false,\r\n            message: resMessage\r\n          });\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"col-md-12\">\r\n        <div className=\"card card-container\">\r\n          <img\r\n            src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\r\n            alt=\"profile-img\"\r\n            className=\"profile-img-card\"\r\n          />\r\n\r\n          <Form\r\n            onSubmit={this.handleRegister}\r\n            ref={c => {\r\n              this.form = c;\r\n            }}\r\n          >\r\n            {!this.state.successful && (\r\n              <div>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"username\">Username</label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"username\"\r\n                    value={this.state.username}\r\n                    onChange={this.onChangeUsername}\r\n                    validations={[required, vusername]}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"email\">Email</label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"email\"\r\n                    value={this.state.email}\r\n                    onChange={this.onChangeEmail}\r\n                    validations={[required, email]}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"password\">Password</label>\r\n                  <Input\r\n                    type=\"password\"\r\n                    className=\"form-control\"\r\n                    name=\"password\"\r\n                    value={this.state.password}\r\n                    onChange={this.onChangePassword}\r\n                    validations={[required, vpassword]}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <button className=\"btn btn-primary btn-block\">Sign Up</button>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {this.state.message && (\r\n              <div className=\"form-group\">\r\n                <div\r\n                  className={\r\n                    this.state.successful\r\n                      ? \"alert alert-success\"\r\n                      : \"alert alert-danger\"\r\n                  }\r\n                  role=\"alert\"\r\n                >\r\n                  {this.state.message}\r\n                </div>\r\n              </div>\r\n            )}\r\n            <CheckButton\r\n              style={{ display: \"none\" }}\r\n              ref={c => {\r\n                this.checkBtn = c;\r\n              }}\r\n            />\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n","export default function authHeader(){\r\n    const user = JSON.parse(localStorage.getItem('user'));\r\n\r\n    if(user && user.accessToken){\r\n        return{ 'x-access-token': user.accessToken}\r\n    }else{\r\n        return {};\r\n    }\r\n}","import axios from 'axios';\r\nimport authHeader from './auth-header';\r\n\r\nconst API_URL = 'http://localhost:8080/api/test';\r\n\r\nclass UserService {\r\n    getPublicContent(){\r\n        return axios.get(API_URL + 'all');\r\n    }\r\n\r\n    getUserBoard(){\r\n        return axios.get(API_URL +'user', {headers: authHeader()});\r\n    }\r\n\r\n    getAdminBoard(){\r\n        return axios.get(API_URL + 'admin', { headers: authHeader()});\r\n    }\r\n}\r\n\r\nexport default new UserService();","import React, { Component } from \"react\";\r\n\r\nimport UserService from \"../services/user.service\";\r\n\r\nexport default class Home extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    \r\n        this.state = {\r\n          content: \"\"\r\n        };\r\n      }\r\n      componentDidMount() {\r\n        UserService.getPublicContent().then(\r\n          response => {\r\n            this.setState({\r\n              content: response.data\r\n            });\r\n          },\r\n          error => {\r\n            this.setState({\r\n              content:\r\n                (error.response && error.response.data) ||\r\n                error.message ||\r\n                error.toString()\r\n            });\r\n          }\r\n        );\r\n      }\r\n    \r\n      render() {\r\n        return (\r\n          <div className=\"container\">\r\n            <header className=\"jumbotron\">\r\n              <h3>{this.state.content}</h3>\r\n            </header>\r\n          </div>\r\n        );\r\n      }\r\n    }","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport AuthService from \"../services/auth.service\";\r\n\r\nexport default class Profile extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    \r\n        this.state = {\r\n          redirect: null,\r\n          userReady: false,\r\n          currentUser: { username: \"\" }\r\n        };\r\n    }\r\n    \r\n    componentDidMount(){\r\n        const currentUser = AuthService.getCurrentUser();\r\n\r\n        if(!currentUser) this.setState({redirect : \"/home\"});\r\n        this.setState({currentUser : currentUser, userReady: true})\r\n    }\r\n\r\n    render(){\r\n        if (this.state.redirect) {\r\n            return <Redirect to={this.state.redirect} />\r\n        }\r\n        const { currentUser } = this.state;\r\n\r\n        return (\r\n            <div className=\"container\">\r\n            {(this.state.userReady) ?\r\n            <div>\r\n            <header className=\"jumbotron\">\r\n              <h3>\r\n                <strong>{currentUser.username}</strong> Profile\r\n              </h3>\r\n            </header>\r\n            <p>\r\n              <strong>Token:</strong>{\" \"}\r\n              {currentUser.accessToken.substring(0, 20)} ...{\" \"}\r\n              {currentUser.accessToken.substr(currentUser.accessToken.length - 20)}\r\n            </p>\r\n            <p>\r\n              <strong>Id:</strong>{\" \"}\r\n              {currentUser.id}\r\n            </p>\r\n            <p>\r\n              <strong>Email:</strong>{\" \"}\r\n              {currentUser.email}\r\n            </p>\r\n            <strong>Authorities:</strong>\r\n            <ul>\r\n              {currentUser.roles &&\r\n                currentUser.roles.map((role, index) => <li key={index}>{role}</li>)}\r\n            </ul>\r\n            </div>: null}\r\n            </div>\r\n        )\r\n    }\r\n}","import React, {Component} from \"react\";\r\n\r\nimport UserService from \"../services/user.service\";\r\n\r\nexport default class BoardUser extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            content : \"\"\r\n        };\r\n    }\r\n\r\n    componentDidMount(){\r\n        UserService.getUserBoard().then(\r\n            response =>{\r\n                this.setState({\r\n                    content: response.data\r\n                })\r\n            },\r\n            error =>{\r\n                this.setState({\r\n                    content:\r\n                    (error.response &&\r\n                        error.response.data &&\r\n                        error.response.data.message) ||\r\n                      error.message ||\r\n                      error.toString()\r\n                });\r\n            }\r\n        );\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"container\">\r\n        <header className=\"jumbotron\">\r\n          <h3>{this.state.content}</h3>\r\n        </header>\r\n      </div>);\r\n    }\r\n}\r\n\r\n","import React, { Component } from \"react\";\r\n\r\nimport UserService from \"../services/user.service\";\r\n\r\nexport default class BoardAdmin extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    \r\n        this.state = {\r\n          content: \"\"\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        UserService.getAdminBoard().then(\r\n          response => {\r\n            this.setState({\r\n              content: response.data\r\n            });\r\n          },\r\n          error => {\r\n            this.setState({\r\n              content:\r\n                (error.response &&\r\n                  error.response.data &&\r\n                  error.response.data.message) ||\r\n                error.message ||\r\n                error.toString()\r\n            });\r\n          }\r\n        );\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n          <div className=\"container\">\r\n            <header className=\"jumbotron\">\r\n              <h3>{this.state.content}</h3>\r\n            </header>\r\n          </div>\r\n        );\r\n    }\r\n}","import React, {Component} from 'react';\nimport {Switch, BrowserRouter as Router, Route, Link} from \"react-router-dom\";\nimport './App.css';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport AuthService from \"./services/auth.service\";\n\nimport Login from \"./components/login.component\";\nimport Register from \"./components/register.component\";\nimport Home from \"./components/home.component\";\nimport Profile from \"./components/profile.component\";\nimport BoardUser from \"./components/board-user.component\";\nimport BoardAdmin from \"./components/board-admin.component\";\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.logOut = this.logOut.bind(this);\n\n    this.state = { \n      showAdminBoard : false,\n      currentUser: undefined\n    };\n\n  }\n\n  componentDidMount(){\n    const user = AuthService.getCurrentUser();\n\n    if(user){\n      this.setState({\n        currentUser: user,\n        showAdminBoard: user.roles.includes(\"ROLE_ADMIN\")\n      })\n    }\n  }\n\n  logOut(){\n    AuthService.logout();\n  }\n\n  render(){\n    const { currentUser, showAdminBoard} = this.state;\n\n    return(\n    <Router>\n      <div>\n        <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\n          <Link to={\"/\"} className=\"navbar-brand\">\n            ToDoList\n          </Link>\n          <div className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <Link to={\"/home\"} className=\"nav-link\">\n                Home\n              </Link>\n            </li>\n\n            {showAdminBoard && (\n              <li className=\"nav-item\">\n                <Link to={\"/admin\"} className=\"nav-link\">\n                  Admin Board\n                </Link>\n              </li>\n            )}\n\n            {currentUser && (\n              <li className=\"nav-item\">\n                <Link to={\"/user\"} className=\"nav-link\">\n                  User\n                </Link>\n              </li>\n            )}\n          </div>\n\n          {currentUser ? (\n            <div className=\"navbar-nav ml-auto\">\n              <li className=\"nav-item\">\n                <Link to={\"/profile\"} className=\"nav-link\">\n                  {currentUser.username}\n                </Link>\n              </li>\n              <li className=\"nav-item\">\n                <a href=\"/login\" className=\"nav-link\" onClick={this.logOut}>\n                  LogOut\n                </a>\n              </li>\n            </div>\n          ) : (\n            <div className=\"navbar-nav ml-auto\">\n              <li className=\"nav-item\">\n                <Link to={\"/login\"} className=\"nav-link\">\n                  Login\n                </Link>\n              </li>\n\n              <li className=\"nav-item\">\n                <Link to={\"/register\"} className=\"nav-link\">\n                  Sign Up\n                </Link>\n              </li>\n            </div>\n          )}\n        </nav>\n\n        <div className=\"container mt-3\">\n          <Switch>\n            <Route exact path={[\"/\", \"/home\"]} component={Home} />\n            <Route exact path=\"/login\" component={Login} />\n            <Route exact path=\"/register\" component={Register} />\n            <Route exact path=\"/profile\" component={Profile} />\n            <Route path=\"/user\" component={BoardUser} />\n            <Route path=\"/admin\" component={BoardAdmin} />\n          </Switch>\n        </div>\n      </div>\n    </Router>\n    )\n  }\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {HashRouter} from \"react-router-dom\";\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}